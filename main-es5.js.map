{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/gallery/gallery.component.ts","webpack:///src/app/gallery/gallery.component.html","webpack:///src/app/gallery/list/list.component.ts","webpack:///src/app/gallery/list/list.component.html","webpack:///src/app/gallery/upload/upload.component.ts","webpack:///src/app/gallery/upload/upload.component.html","webpack:///src/app/shared/image.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","providers","bootstrap","GalleryComponent","service","getImageList","ListComponent","imageList","snapshotChanges","subscribe","list","map","item","payload","val","console","log","UploadComponent","storage","formTemplate","caption","imageUrl","selectedImage","resetForm","event","target","files","reader","FileReader","onload","imgSrc","result","readAsDataURL","formValue","isSubmit","filePath","name","split","slice","join","Date","getTime","fileRef","ref","upload","pipe","getDownloadURL","url","insertImageList","reset","setValue","onSubmit","showPreview","ImageService","imageDetails","push","providedIn","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GalleryComponent } from './gallery/gallery.component';\nimport { UploadComponent } from './gallery/upload/upload.component';\nimport { ListComponent } from './gallery/list/list.component';\n\n\nconst routes: Routes = [\n  {path:'',redirectTo:'gallery/upload',pathMatch:'full'},\n  {path:'gallery',component:GalleryComponent,children:[\n    {path:'upload',component:UploadComponent},\n    {path:'list',component:ListComponent}\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'ImageGallery';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport {AngularFireDatabaseModule} from '@angular/fire/database';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport{ ReactiveFormsModule } from '@angular/forms'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GalleryComponent } from './gallery/gallery.component';\nimport { ListComponent } from './gallery/list/list.component';\nimport { UploadComponent } from './gallery/upload/upload.component';\nimport { environment } from 'src/environments/environment';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GalleryComponent,\n    ListComponent,\n    UploadComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule, \n    AngularFireAuthModule,\n    AngularFireStorageModule,\n    AngularFireDatabaseModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ImageService } from '../shared/image.service';\n\n@Component({\n  selector: 'app-gallery',\n  templateUrl: './gallery.component.html',\n  styleUrls: ['./gallery.component.less']\n})\nexport class GalleryComponent implements OnInit {\n\n  constructor(private service:ImageService) { }\n\n  ngOnInit(): void {\n    this.service.getImageList();\n  }\n\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { ImageService } from 'src/app/shared/image.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.less']\n})\nexport class ListComponent implements OnInit {\n  list:any[];\n  rowIndexArray:any[];\n  constructor( private service:ImageService ) { }\n\n  ngOnInit() {\n    this.service.imageList.snapshotChanges().subscribe(list=>{\n      this.list=list.map(item=>{return item.payload.val()})\n      console.log(this.list)\n    })\n  }\n\n}\n","<table *ngIf=\"list\">\n    <tr *ngFor=\"let list of list\">\n        <td>\n            <img [src]=\"list.imageUrl\" alt=\"\">\n            <span>{{list.caption}}</span>\n        </td>\n    </tr>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { ImageService } from 'src/app/shared/image.service';\nimport { finalize } from 'rxjs/operators';\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.less']\n})\nexport class UploadComponent implements OnInit {\n  formTemplate=new FormGroup({\n    caption:new FormControl(''),\n    imageUrl:new FormControl('')\n  })\n\n    selectedImage:any=null;\n    imgSrc: string;\n    isSubmit:boolean;\n\n  constructor(private service:ImageService,\n    private storage:AngularFireStorage) { }\n\n  ngOnInit(): void {\n    this.service.getImageList();\n    this.resetForm();\n  }\n\n  showPreview(event:any){\n    if(event.target.files && event.target.files[0]){\n      const reader=new FileReader();\n      reader.onload=(e:any)=>this.imgSrc=e.target.result;\n      reader.readAsDataURL(event.target.files[0]);\n      this.selectedImage=event.target.files[0];\n    }\n    else{\n      this.imgSrc='/assets/image.png';\n      this.selectedImage=null;\n    }\n  }\n  onSubmit(formValue){\n    this.isSubmit=true;\n    let filePath=`images/${this.selectedImage.name.split('.').slice(0,-1).join('.')}_${new Date().getTime()}`;\n    const fileRef=this.storage.ref(filePath);\n    this.storage.upload(filePath,this.selectedImage).snapshotChanges().pipe(\n      finalize(()=>{\n        fileRef.getDownloadURL().subscribe((url)=>{\n          formValue['imageUrl']=url;\n          this.service.insertImageList(formValue);\n          this.resetForm();\n        })\n      })\n      ).subscribe();\n  }\n  resetForm(){\n    this.formTemplate.reset();\n    this.formTemplate.setValue({\n      caption:'',\n      imageUrl:''\n    });\n    this.imgSrc='/assets/image.png';\n    this.selectedImage=null;\n    this.isSubmit=false;\n  }\n}\n","<mat-card>\n<form [formGroup]=\"formTemplate\" (submit)=\"onSubmit(formTemplate.value)\">\n\n       <img [src]=\"imgSrc\" width=\"300px\" height=\"250px\">\n\n       <input   type=\"file\" formControlName='imageUrl' (change)=\"showPreview($event)\">\n\n    <div class=\"in\">\n        <input matInput formControlName='caption' placeholder=\"Name\">\n    </div>\n   \n           <button mat-button type=\"submit\">Submit</button>\n       \n</form>\n<button mat-button><a routerLink=\"/gallery/list\">Go to gallery</a></button>\n</mat-card>","import { Injectable } from '@angular/core';\nimport { AngularFireList, AngularFireDatabase } from '@angular/fire/database';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n  imageList:AngularFireList<any>;\n\n  constructor( public firebase:AngularFireDatabase) {}\n\n    getImageList(){\n      this.imageList=this.firebase.list('imageDetails');\n    }\n    insertImageList(imageDetails){\n      this.imageList.push(imageDetails);\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyCwm6UEYuap7OegmY_oWSBwO-RauJBtnZ0\",\n    authDomain: \"images-8b8ba.firebaseapp.com\",\n    databaseURL: \"https://images-8b8ba.firebaseio.com\",\n    projectId: \"images-8b8ba\",\n    storageBucket: \"images-8b8ba.appspot.com\",\n    messagingSenderId: \"599434479776\",\n    appId: \"1:599434479776:web:d2401c77694ceee2a761c5\",\n    measurementId: \"G-CYP5410HXK\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}